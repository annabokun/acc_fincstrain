## 1b.) Label newly created Major1_PSE_recode variable
analyses_df$Major1_PSE_recode <- factor(analyses_df$Major1_PSE_recode,
levels = c(24,54,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,31,30,27,26,25,24,23,22,19,16,15,14,13,12,11,10,9,5,4,3,1,0),
labels = c("liberal arts (general studies and humanities)", #24
"history", #54
"business management", #52
"health", #51
"visual and performing arts", #50
"transportation", #49
"precision production", #48
"mechanic and repair technologies", #47
"construction trades", #46
"social sciences", #45
"public administration", #44
"security and protective services", #43
"psychology", #42
"science technologies", #41
"physical sciences", #40
"theology and religion", #39
"philosophy", #38
"parks, recreation, leisure", #31
"multi/interdisciplinary studies", #30
"math and stats", #27
"biological and biomedical", #26
"library science", #25
"liberal arts and sciences", #24
"english language and literature", #23
"legal", #22
"family and consumer sciences", #19
"foreign languages", #16
"engineering technologies", #15
"engineering", #14
"education", #13
"personal and culinary", #12
"computer and information sciences", #11
"communication technologies", #10
"communication and journalism", #9
"area, ethnic, cultural, and gender studies", #5
"architecture", #4
"natural resources and conservation", #3
"agriculture and related sciences", #1
"unavailable")) #0
## 1c.) Convert to Title Case
library(stringr)
analyses_df$Major1_PSE_recode = str_to_title(analyses_df$Major1_PSE_recode)
# Check to see if recoding worked  -- yay!
major1_recode_test <- analyses_df %>%
tab(Major1_PSE_recode)
View(major1_recode_test)
View(analyses_df)
View(how_many)
View(analyses_df)
View(analyses_df)
View(non_miss_majors)
View(how_many)
View(non_miss_majors)
non_miss_majorsx <- analyses_df %>%
select(Major1_PSE, Major1_PSE_recode) %>%
filter(!is.na(Major1_PSE))
options(scipen = 999)
View(non_miss_majorsx)
length(unique(non_miss_majorsx$Major1_PSE)) #552
# Check to see if recoding worked  -- yay!
major1_test <- analyses_df %>%
tab(Major1_PSE_recode, Major1_PSE)
View(major1_test)
non_miss_majorsX <- analyses_df %>%
select(Major1_PSE, Major1_PSE_recode) %>%
filter(!is.na(Major1_PSE))
options(scipen = 999)
View(non_miss_majorsX)
View(analyses_df)
## 1b.) Group majors
analyses_df$Major1_PSE_recode <- dplyr::case_when(
analyses_df$Major1_PSE %in% (24010100:24019900) ~ 24,
analyses_df$Major1_PSE %in% (54000000:54010100) | analyses_df$Major1_PSE==540101 ~ 54,
analyses_df$Major1_PSE %in% (52000000:52999900) | analyses_df$Major1_PSE %in% (520101:529999) ~ 52,
analyses_df$Major1_PSE %in% (51000000:51390200) | analyses_df$Major1_PSE %in% (510000:513902) ~ 51,
analyses_df$Major1_PSE %in% (50010100:50100300) | analyses_df$Major1_PSE %in% (500409:500602) ~ 50,
analyses_df$Major1_PSE %in% (49010100:49020500) ~ 49,
analyses_df$Major1_PSE %in% (48050100:48070300) | analyses_df$Major1_PSE %in% (480508:480510) ~ 48,
analyses_df$Major1_PSE %in% (47010600:47060400) | analyses_df$Major1_PSE %in% (470201:470604) ~ 47,
analyses_df$Major1_PSE %in% (46010100:46050300) | analyses_df$Major1_PSE %in% (460201:460502) ~ 46,
analyses_df$Major1_PSE %in% (45010100:45999900) | analyses_df$Major1_PSE %in% (450101:451101) ~ 45,
analyses_df$Major1_PSE %in% (44000000:44999900) | analyses_df$Major1_PSE %in% (440000:440701) ~ 44,
analyses_df$Major1_PSE %in% (43010200:43999900) | analyses_df$Major1_PSE %in% (430104:430107) ~ 43,
analyses_df$Major1_PSE %in% (42010100:42999900) | analyses_df$Major1_PSE %in% (420101:422814) ~ 42,
analyses_df$Major1_PSE %in% (41010100:41030100) ~ 41,
analyses_df$Major1_PSE %in% (40050100:40080100) | analyses_df$Major1_PSE %in% (400501:400801) ~ 40,
analyses_df$Major1_PSE %in% (39020100:39079900) | analyses_df$Major1_PSE %in% (390602:390699) ~ 39,
analyses_df$Major1_PSE %in% (38010100:38020100) ~ 38,
analyses_df$Major1_PSE %in% (31010100:31059900) | analyses_df$Major1_PSE==310505 ~ 31,
analyses_df$Major1_PSE %in% (30000000:30999900) | analyses_df$Major1_PSE %in% (301901:309999) ~ 30,
analyses_df$Major1_PSE %in% (27010100:27999900) ~ 27,
analyses_df$Major1_PSE %in% (26010000:26999900) ~ 26,
analyses_df$Major1_PSE==25010100 | analyses_df$Major1_PSE==250301 ~ 25,
analyses_df$Major1_PSE %in% (24010100:24019900) | analyses_df$Major1_PSE %in% (240101:240102) ~ 24,
analyses_df$Major1_PSE %in% (23010100:23130400) | analyses_df$Major1_PSE==231302 ~ 23,
analyses_df$Major1_PSE %in% (22010000:22999900) | analyses_df$Major1_PSE %in% (220101:220303) ~ 22,
analyses_df$Major1_PSE %in% (19049900:19999900) | analyses_df$Major1_PSE %in% (190499:190710) ~ 19,
analyses_df$Major1_PSE %in% (16010100:16160300) ~ 16,
analyses_df$Major1_PSE %in% (15020100:15150100) | analyses_df$Major1_PSE %in% (150000:159999) ~ 15,
analyses_df$Major1_PSE %in% (14010100:14350100) | analyses_df$Major1_PSE %in% (140102:141001) ~ 14,
analyses_df$Major1_PSE %in% (13010100:13999900) | analyses_df$Major1_PSE %in% (130101:139999) ~ 13,
analyses_df$Major1_PSE %in% (12040100:12050400) | analyses_df$Major1_PSE %in% (120401:120503) ~ 12,
analyses_df$Major1_PSE %in% (11010100:11999900) | analyses_df$Major1_PSE %in% (110103:111003) ~ 11,
analyses_df$Major1_PSE %in% (10020100:10999900) | analyses_df$Major1_PSE==100301 ~ 10,
analyses_df$Major1_PSE %in% (9010000:9070200) | analyses_df$Major1_PSE==90101 ~ 09,
analyses_df$Major1_PSE %in% (5010700:5029900) | analyses_df$Major1_PSE==50202 ~ 05,
analyses_df$Major1_PSE %in% (4020100:4040100) ~ 04,
analyses_df$Major1_PSE %in% (3010300:3060100) ~ 03,
analyses_df$Major1_PSE==10104 | analyses_df$Major1_PSE %in% (1010200:1110100) ~ 01,
analyses_df$Major1_PSE==99999 | analyses_df$Major1_PSE==99999999 | analyses_df$Major1_PSE==999999 | analyses_df$Major1_PSE==100000000 | analyses_df$Major1_PSE==1000000 ~ 0)
# Check to see if recoding worked  -- yay!
major1_recode_test <- analyses_df %>%
tab(Major1_PSE_recode)
View(major1_recode_test)
## 1b.) Label newly created Major1_PSE_recode variable
analyses_df$Major1_PSE_recode <- factor(analyses_df$Major1_PSE_recode,
levels = c(24,54,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,31,30,27,26,25,24,23,22,19,16,15,14,13,12,11,10,9,5,4,3,1,0),
labels = c("liberal arts (general studies and humanities)", #24
"history", #54
"business management", #52
"health", #51
"visual and performing arts", #50
"transportation", #49
"precision production", #48
"mechanic and repair technologies", #47
"construction trades", #46
"social sciences", #45
"public administration", #44
"security and protective services", #43
"psychology", #42
"science technologies", #41
"physical sciences", #40
"theology and religion", #39
"philosophy", #38
"parks, recreation, leisure", #31
"multi/interdisciplinary studies", #30
"math and stats", #27
"biological and biomedical", #26
"library science", #25
"liberal arts and sciences", #24
"english language and literature", #23
"legal", #22
"family and consumer sciences", #19
"foreign languages", #16
"engineering technologies", #15
"engineering", #14
"education", #13
"personal and culinary", #12
"computer and information sciences", #11
"communication technologies", #10
"communication and journalism", #9
"area, ethnic, cultural, and gender studies", #5
"architecture", #4
"natural resources and conservation", #3
"agriculture and related sciences", #1
"unavailable")) #0
## 1c.) Convert to Title Case
library(stringr)
analyses_df$Major1_PSE_recode = str_to_title(analyses_df$Major1_PSE_recode)
# Check to see if recoding worked  -- yay!
major1_test <- analyses_df %>%
tab(Major1_PSE_recode, Major1_PSE)
View(major1_test)
non_miss_majorsX <- analyses_df %>%
select(Major1_PSE, Major1_PSE_recode) %>%
filter(!is.na(Major1_PSE))
options(scipen = 999)
View(non_miss_majorsX)
write.csv(analyses_df, "~/Google Drive/My Drive/Dissertation/Replication Files/Data/analyses_df.csv")
## 1b.) Group majors
Panel12_dates$Major1_PSE_recode <- dplyr::case_when(
Panel12_dates$Major1_PSE %in% (24010100:24019900) ~ 24,
Panel12_dates$Major1_PSE %in% (54000000:54010100) | Panel12_dates$Major1_PSE==540101 ~ 54,
Panel12_dates$Major1_PSE %in% (52000000:52999900) | Panel12_dates$Major1_PSE %in% (520101:529999) ~ 52,
Panel12_dates$Major1_PSE %in% (51000000:51390200) | Panel12_dates$Major1_PSE %in% (510000:513902) ~ 51,
Panel12_dates$Major1_PSE %in% (50010100:50100300) | Panel12_dates$Major1_PSE %in% (500409:500602) ~ 50,
Panel12_dates$Major1_PSE %in% (49010100:49020500) ~ 49,
Panel12_dates$Major1_PSE %in% (48050100:48070300) | Panel12_dates$Major1_PSE %in% (480508:480510) ~ 48,
Panel12_dates$Major1_PSE %in% (47010600:47060400) | Panel12_dates$Major1_PSE %in% (470201:470604) ~ 47,
Panel12_dates$Major1_PSE %in% (46010100:46050300) | Panel12_dates$Major1_PSE %in% (460201:460502) ~ 46,
Panel12_dates$Major1_PSE %in% (45010100:45999900) | Panel12_dates$Major1_PSE %in% (450101:451101) ~ 45,
Panel12_dates$Major1_PSE %in% (44000000:44999900) | Panel12_dates$Major1_PSE %in% (440000:440701) ~ 44,
Panel12_dates$Major1_PSE %in% (43010200:43999900) | Panel12_dates$Major1_PSE %in% (430104:430107) ~ 43,
Panel12_dates$Major1_PSE %in% (42010100:42999900) | Panel12_dates$Major1_PSE %in% (420101:422814) ~ 42,
Panel12_dates$Major1_PSE %in% (41010100:41030100) ~ 41,
Panel12_dates$Major1_PSE %in% (40050100:40080100) | Panel12_dates$Major1_PSE %in% (400501:400801) ~ 40,
Panel12_dates$Major1_PSE %in% (39020100:39079900) | Panel12_dates$Major1_PSE %in% (390602:390699) ~ 39,
Panel12_dates$Major1_PSE %in% (38010100:38020100) ~ 38,
Panel12_dates$Major1_PSE %in% (31010100:31059900) | Panel12_dates$Major1_PSE==310505 ~ 31,
Panel12_dates$Major1_PSE %in% (30000000:30999900) | Panel12_dates$Major1_PSE %in% (301901:309999) ~ 30,
Panel12_dates$Major1_PSE %in% (27010100:27999900) ~ 27,
Panel12_dates$Major1_PSE %in% (26010000:26999900) ~ 26,
Panel12_dates$Major1_PSE==25010100 | Panel12_dates$Major1_PSE==250301 ~ 25,
Panel12_dates$Major1_PSE %in% (24010100:24019900) | Panel12_dates$Major1_PSE %in% (240101:240102) ~ 24,
Panel12_dates$Major1_PSE %in% (23010100:23130400) | Panel12_dates$Major1_PSE==231302 ~ 23,
Panel12_dates$Major1_PSE %in% (22010000:22999900) | Panel12_dates$Major1_PSE %in% (220101:220303) ~ 22,
Panel12_dates$Major1_PSE %in% (19049900:19999900) | Panel12_dates$Major1_PSE %in% (190499:190710) ~ 19,
Panel12_dates$Major1_PSE %in% (16010100:16160300) ~ 16,
Panel12_dates$Major1_PSE %in% (15020100:15150100) | Panel12_dates$Major1_PSE %in% (150000:159999) ~ 15,
Panel12_dates$Major1_PSE %in% (14010100:14350100) | Panel12_dates$Major1_PSE %in% (140102:141001) ~ 14,
Panel12_dates$Major1_PSE %in% (13010100:13999900) | Panel12_dates$Major1_PSE %in% (130101:139999) ~ 13,
Panel12_dates$Major1_PSE %in% (12040100:12050400) | Panel12_dates$Major1_PSE %in% (120401:120503) ~ 12,
Panel12_dates$Major1_PSE %in% (11010100:11999900) | Panel12_dates$Major1_PSE %in% (110103:111003) ~ 11,
Panel12_dates$Major1_PSE %in% (10020100:10999900) | Panel12_dates$Major1_PSE==100301 ~ 10,
Panel12_dates$Major1_PSE %in% (9010000:9070200) | Panel12_dates$Major1_PSE==90101 ~ 09,
Panel12_dates$Major1_PSE %in% (5010700:5029900) | Panel12_dates$Major1_PSE==50202 ~ 05,
Panel12_dates$Major1_PSE %in% (4020100:4040100) ~ 04,
Panel12_dates$Major1_PSE %in% (3010300:3060100) ~ 03,
Panel12_dates$Major1_PSE==10104 | Panel12_dates$Major1_PSE %in% (1010200:1110100) ~ 01,
Panel12_dates$Major1_PSE==99999 | Panel12_dates$Major1_PSE==99999999 | Panel12_dates$Major1_PSE==999999 | Panel12_dates$Major1_PSE==100000000 | Panel12_dates$Major1_PSE==1000000 ~ 0)
# Check to see if recoding worked  -- yay!
major1_recode_test <- Panel12_dates %>%
tab(Major1_PSE_recode)
## 1b.) Label newly created Major1_PSE_recode variable
Panel12_dates$Major1_PSE_recode <- factor(Panel12_dates$Major1_PSE_recode,
levels = c(24,54,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,31,30,27,26,25,24,23,22,19,16,15,14,13,12,11,10,9,5,4,3,1,0),
labels = c("liberal arts (general studies and humanities)", #24
"history", #54
"business management", #52
"health", #51
"visual and performing arts", #50
"transportation", #49
"precision production", #48
"mechanic and repair technologies", #47
"construction trades", #46
"social sciences", #45
"public administration", #44
"security and protective services", #43
"psychology", #42
"science technologies", #41
"physical sciences", #40
"theology and religion", #39
"philosophy", #38
"parks, recreation, leisure", #31
"multi/interdisciplinary studies", #30
"math and stats", #27
"biological and biomedical", #26
"library science", #25
"liberal arts and sciences", #24
"english language and literature", #23
"legal", #22
"family and consumer sciences", #19
"foreign languages", #16
"engineering technologies", #15
"engineering", #14
"education", #13
"personal and culinary", #12
"computer and information sciences", #11
"communication technologies", #10
"communication and journalism", #9
"area, ethnic, cultural, and gender studies", #5
"architecture", #4
"natural resources and conservation", #3
"agriculture and related sciences", #1
"unavailable")) #0
## 1c.) Convert to Title Case
library(stringr)
Panel12_dates$Major1_PSE_recode = str_to_title(Panel12_dates$Major1_PSE_recode)
# Check to see if recoding worked  -- yay!
major1_test <- Panel12_dates %>%
tab(Major1_PSE_recode, Major1_PSE)
View(major1_test)
write.csv(Panel12_dates, "~/Google Drive/My Drive/Dissertation/Replication Files/Data/Panel12_dates.csv")
majors <- analyses_df %>%
tab(Major1_PSE_recode)
View(majors)
iod <- analyses_df %>%
tab(Industry_of_Disp)
View(iod)
View(iod)
View(iod)
View(majors)
View(majors)
View(major1_recode_test)
View(major1_recode_test)
View(major1_recode_test)
View(major1_test)
major1_test <- analyses_df %>%
tab(Major1_PSE_recode)
major1_test <- analyses_df %>%
tab(Major1_PSE_recode, Major1_PSE)
View(major1_recode_test)
View(majors)
# How many retrained in same broad field?
how_many <- analyses_df %>%
filter(Match_Major_Ind_of_Disp==1)
length(unique(how_many$PersonID)) # 517 / 7774 = 0.06650373 = ~6.65% of workers who retrained, retrained in the same field
View(how_many)
library(readxl)
SDP_Memo_Data_V2_final1 <- read_excel("Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/PhD Job Market/Applications/Harvard SDP Fellowship (2024-26)/Analytic Task/SDP Memo Data V2_final1.xlsx")
View(SDP_Memo_Data_V2_final1)
library(desc)
any(is.na(SDP_Memo_Data_V2_final1))
describe_panel_by_year  <- summary(SDP_Memo_Data_V2_final1)
describe_panel_by_year %>%
kable() %>%
kable_styling()
library(tidyverse)
describe_panel_by_year  <- summary(SDP_Memo_Data_V2_final1)
describe_panel_by_year %>%
kable() %>%
kable_styling()
library(kableExtra)
describe_panel_by_year  <- summary(SDP_Memo_Data_V2_final1)
describe_panel_by_year %>%
kable() %>%
kable_styling()
describe_panel_by_year  <- summary(SDP_Memo_Data_V2_final1)
describe_panel_by_year %>%
kable(school_name) %>%
kable_styling()
install.packages("VIM")
library(VIM)
library(VIM)
aggr(SDP_Memo_Data_V2_final1, col = c('blue', 'red'), numbers = TRUE, sortVars = TRUE)
detach("package:VIM", unload = TRUE)
library(VIM)
install.packages("ranger")
library(VIM)
library(VIM)
install.packages("VIM")
library(VIM)
library(VIM)
summary(SDP_Memo_Data_V2_final1$sch_magnet)
hist(SDP_Memo_Data_V2_final1$sch_magnet)
pdata <- pdata.frame(SDP_Memo_Data_V2_final1, index=c("tid","school_year"))
library(plm)
pdata <- pdata.frame(SDP_Memo_Data_V2_final1, index=c("tid","school_year"))
View(pdata)
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files")
library(readr)
mexican_hhs <- read_csv("Data/Temp/mexican_hhs.csv")
View(mexican_hhs)
mexican_hhs$...1 <- NULL
#### Visually inspect sample ---------------------------
samp_acs <- mexican_hhs %>%
select(YEAR, SERIAL, PERNUM, STATEFIP, SEX, AGE, RELATE, MOMLOC, POPLOC, NCHILD,
MARST, RACE, HISPAN, EDUC, HHINCOME, NUMPREC, FAMSIZE, GQ, PERWT)
library(tidyverse)
#### Visually inspect sample ---------------------------
samp_acs <- mexican_hhs %>%
select(YEAR, SERIAL, PERNUM, STATEFIP, SEX, AGE, RELATE, MOMLOC, POPLOC, NCHILD,
MARST, RACE, HISPAN, EDUC, HHINCOME, NUMPREC, FAMSIZE, GQ, PERWT)
View(samp_acs)
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data")
#### Load ACS 2010-2011 data ---------------------------
# Extract already restricted to 5 HEPESE states: AZ, CA, CO, NM, TX
# DATA LOCATION: Google Drive -> Postdoc -> Projects -> Caregivers-Housing -> Replication Files -> Data -> Raw Data -> IPUMS ACS
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Raw Data/IPUMS ACS")
ddi <- read_ipums_ddi("usa_00013.xml")
library(tidyverse)
library(gtsummary)
library(flextable)
library(smd)
library(ipumsr)
library(survey)
library(srvyr)
#### Load ACS 2010-2011 data ---------------------------
# Extract already restricted to 5 HEPESE states: AZ, CA, CO, NM, TX
# DATA LOCATION: Google Drive -> Postdoc -> Projects -> Caregivers-Housing -> Replication Files -> Data -> Raw Data -> IPUMS ACS
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Raw Data/IPUMS ACS")
ddi <- read_ipums_ddi("usa_00013.xml")
#### Use the IPUMS object to load its associated data ---------------------------
acs <- read_ipums_micro(ddi)
#### Set working directory ---------------------------
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data")
#### SAVE
write.csv(acs, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/acs.csv")
saveRDS(acs, file = "acs.rds")
## 1a) Double-check ACS year and state match with HEPESE ---------------------------
table(acs$YEAR, acs$STATEFIP) # good
acs$hh_id <- paste(acs$SAMPLE, acs$SERIAL, sep = "_")
acs$person_id <- paste(acs$SAMPLE, acs$SERIAL, acs$PERNUM, sep = "_")
View(acs)
acs <- acs %>%
relocate(hh_id, .after = SERIAL)
acs <- acs %>%
relocate(person_id, .after = hh_id)
length(unique(acs$hh_id))  # Should match the number of unique households
acs %>%
group_by(hh_id) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head()  # This shows households with the highest number of memb
length(unique(acs$person_id))  # Should match the number of rows (since each row is one person)
sum(duplicated(acs$person_id))
acs %>%
group_by(hh_id) %>%
summarise(unique_serial = n_distinct(SERIAL)) %>%
filter(unique_serial > 1)  # If this returns 0 rows, each household_id corresponds to only one SERIA
acs %>%
group_by(hh_id) %>%
summarise(unique_serial = n_distinct(SERIAL)) %>%
filter(unique_serial > 1)  # If this returns 0 rows, each household_id corresponds to only one SERIAL
acs %>%
group_by(hh_id) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head()  # This shows households with the highest number of members
duplicated(acs[,4])
duplicated(acs[,5])
table(table(acs$hh_id))
acs[acs$hh_id == "2010_26257", c("hh_id", "person_id", "PERNUM")
acs[acs$hh_id == "2010_26257", c("hh_id", "person_id", "PERNUM")]
acs[acs$hh_id == "2010_26257", c("hh_id", "person_id", "PERNUM")]
test <- acs[acs$hh_id == "2010_26257", c("hh_id", "person_id", "PERNUM")]
View(test)
test <- acs[acs$hh_id == "821606", c("hh_id", "person_id", "PERNUM")]
View(test)
test <- acs[acs$hh_id == "201001_207436", c("hh_id", "person_id", "PERNUM")]
View(test)
acs %>%
group_by(hh_id) %>%
summarise(unique_serial = n_distinct(SERIAL)) %>%
filter(unique_serial > 1)  # If this returns 0 rows, each household_id corresponds to only one SERIAL
test <- acs %>%
group_by(hh_id) %>%
summarise(unique_serial = n_distinct(SERIAL)) %>%
filter(unique_serial > 1)  # If this returns 0 rows, each household_id corresponds to only one SERIAL
View(test)
mex_hh <- acs %>%
filter(HISPAN == 1)                    # Mexican ethnicity
# n = 405,979 (unweighted)
mex_hh_n <- sum(mex_hh$PERWT)            # n = 47,021,234 (weight
mex_hh_n <- sum(mex_hh$PERWT)            # n = 47,021,234 (weighted)
## 3.) Create subset of HHs with adult children and their older parents ---------------------------
acs_mex2 <- mexican_hh %>%
group_by(hh_id) %>%
filter(GQ %in% 1:2 | GQ == 5) %>%  # Exclude group quarters but allow HHs with 10+ unrelated individuals
mutate(
mother_age = if_else(MOMLOC > 0, AGE[match(MOMLOC, PERNUM)], NA_real_),
father_age = if_else(POPLOC > 0, AGE[match(POPLOC, PERNUM)], NA_real_)
) %>%
filter(
any(AGE >= 18 & (mother_age >= 80 | father_age >= 80)),  # Ensure an adult child (18+) lives with a parent (80+)
any(RELATE == 1 & (AGE >= 18 | mother_age >= 80 | father_age >= 80))  # Ensure either adult child (18+) or parent (80+) is the householder
) %>%
ungroup()
## 3.) Create subset of HHs with adult children and their older parents ---------------------------
acs_mex2 <- mex_hh %>%
group_by(hh_id) %>%
filter(GQ %in% 1:2 | GQ == 5) %>%  # Exclude group quarters but allow HHs with 10+ unrelated individuals
mutate(
mother_age = if_else(MOMLOC > 0, AGE[match(MOMLOC, PERNUM)], NA_real_),
father_age = if_else(POPLOC > 0, AGE[match(POPLOC, PERNUM)], NA_real_)
) %>%
filter(
any(AGE >= 18 & (mother_age >= 80 | father_age >= 80)),  # Ensure an adult child (18+) lives with a parent (80+)
any(RELATE == 1 & (AGE >= 18 | mother_age >= 80 | father_age >= 80))  # Ensure either adult child (18+) or parent (80+) is the householder
) %>%
ungroup()
## Unweighted n
nrow(acs_mex2)
## Weighted n
acs_mex2_n <- sum(acs_mex2$PERWT)
## Modified version to account for household headship
acs_mex3 <- mex_hh %>%
group_by(hh_id) %>%
filter(GQ %in% 1:2 | GQ==5) %>%
mutate(
# Get ages of parents as before
mother_age = if_else(MOMLOC > 0, AGE[match(MOMLOC, PERNUM)], NA_real_),
father_age = if_else(POPLOC > 0, AGE[match(POPLOC, PERNUM)], NA_real_),
# Identify if person is household head (RELATE == 1)
is_head = (RELATE == 1),
# Get age of household head
head_age = AGE[RELATE == 1],
# Identify if person is an adult child (18+) with elderly parent (80+)
is_adult_child = (AGE >= 18 & (mother_age >= 80 | father_age >= 80)),
# Check if the household head is either:
# 1) an adult child (18+) with elderly parent (80+), or
# 2) an elderly parent (80+) with adult child (18+)
valid_head = (
(is_head & is_adult_child) |  # head is adult child with elderly parent
(is_head & AGE >= 80 & any(AGE >= 18 & (MOMLOC > 0 | POPLOC > 0)))  # head is elderly parent with adult child
)
) %>%
# Keep households where the head satisfies our conditions
filter(any(valid_head)) %>%
ungroup()
## 3.) Create subset of HHs with adult children and their older parents ---------------------------
acs_mexx <- mex_hh %>%
group_by(hh_id) %>%
filter(GQ %in% 1:2 | GQ == 5) %>%  # Exclude group quarters but allow HHs with 10+ unrelated individuals
mutate(
mother_age = if_else(MOMLOC > 0, AGE[match(MOMLOC, PERNUM)], NA_real_),
father_age = if_else(POPLOC > 0, AGE[match(POPLOC, PERNUM)], NA_real_)
) %>%
filter(
any(AGE >= 18 & (mother_age >= 80 | father_age >= 80)) &               # Ensure an adult child (18+) lives with a parent (80+)
any(RELATE == 1 & (AGE >= 18 | mother_age >= 80 | father_age >= 80))  # Ensure either adult child (18+) or parent (80+) is the householder
) %>%
ungroup()
## Unweighted n
nrow(acs_mexx) # 8,440
## Weighted n
acs_mexx_n <- sum(acs_mexx$PERWT) # 877,763
write.csv(acs_mex2, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/acs_mex2.csv")
saveRDS(acs_mex2, file = "acs_mex2.rds")
table(acs_mex2$RELATE)  # Should show that all remaining HHs have either 18+ child or 80+ parent as the head
summary(acs_mex2$AGE)    # Should include adults (18+) and older parents (80+)
acs_mex2 %>%
filter(is_head) %>%
summarise(
n_heads = n(),
mean_head_age = mean(AGE),
n_elderly_heads = sum(AGE >= 80),
n_adult_child_heads = sum(AGE >= 18 & (mother_age >= 80 | father_age >= 80))
)
