# Relocate new variables to front for easier visibility
acs <- acs %>%
relocate(hh_id, .after = SERIAL)
acs <- acs %>%
relocate(person_id, .after = hh_id)
# Verify new variables
# Count number of duplicate HH IDs (should match number of people per household)
table(table(acs$hh_id))
# Visual inspection
# Look at all members of one HH
test <- acs[acs$hh_id == "201001_207436", c("hh_id", "person_id", "PERNUM")]
# Count unique person IDs
length(unique(acs$person_id)) # 1,487,263
# Should match the number of rows (since each row is one person) -- good
# Check for duplicate person IDs
sum(duplicated(acs$person_id)) # 0 -- good
# Cross-check SERIAL and PERNUM to verify that hh_id correctly groups individuals within the same HH
test <- acs %>%
group_by(hh_id) %>%
summarise(unique_serial = n_distinct(SERIAL)) %>%
filter(unique_serial > 1)  # If this returns 0 rows, each hh_id corresponds to only one SERIAL -- good
# Check sample size
unique(length(acs$person_id))  # n = 1,487,263
# Have to divide by 2, since the ACS samples 2 years: 743,631.5
# Use RACHSING / RACESING: single race identification
table(acs$RACHSING)
acs_whites <- acs %>%
filter(RACHSING == 1)               # non-Hisp White
# n = 1,059,620 (unweighted)
whites_n <- sum(acs_whites$PERWT)     # n = 4,106,700,348 (weighted)
# divided by 2 bc samples cover 2 yrs: 2,053,350,174 (weighted)
length(unique(acs_whites$person_id))
## 2. Create subset of HHs with adult children and their older parents ---------------------------
acs_whites <- acs_whites %>%
group_by(hh_id) %>%              # Ensure in same HH
filter(GQ %in% 1:2 | GQ==5) %>%  # 1:2 (exclude group quarters); 5 (HHs w/10+ or individuals unrelated to the HOH)
mutate(
mother_age = if_else(MOMLOC > 0, AGE[match(MOMLOC, PERNUM)], NA_real_),        # If MOMLOC > 0 (mother lives in same HH), then find her age; match(MOMLOC, PERNUM) finds the row where PERNUM equals MOMLOC; AGE[match(...)] gets the age of that person (the mother)
father_age = if_else(POPLOC > 0, AGE[match(POPLOC, PERNUM)], NA_real_)) %>%    # Same for dads
filter(
any(AGE >= 18 & (mother_age >= 80 | father_age >= 80)) &                       # Ensure an adult child (18+) lives with a parent (80+)
any(RELATE == 1 & (AGE >= 18 | mother_age >= 80 | father_age >= 80))) %>%    # Ensure either adult child OR parent is the HOH
ungroup()
length(unique(acs_whites$person_id)) # n =
#### SAVE
write.csv(acs_whites, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/acs_whites.csv")
setwd("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp")
saveRDS(acs_whites, file = "acs_whites.rds")
#================#
#=== CLEANING ===#
#================#
#### 3. ACS Cleaning ---------------------------
#### 3a. Collapse EDUC into HS/No HS categories ---------------------------
acs_whites <- acs_whites %>%
mutate(
hs_binary = case_when(
EDUC %in% 0:5 ~ "Less than High School",
EDUC %in% 6:11 ~ "High School or More",
TRUE ~ NA_character_)) # Handle missing values
# Weighted proportions for HS/No HS
acs_whites_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acs_whites)
hs_distribution <- svymean(~factor(hs_binary), acs_whites_svy, na.rm = TRUE)
print(hs_distribution)
#### 3b. Collapse HH income ($20k binary) ---------------------------
summary(acs_whites$HHINCOME)
# Create 3-category income variable
acs_whites <- acs_whites %>%
mutate(
inc_3cat = case_when(
HHINCOME < 20000 ~ "< $20,000",
HHINCOME >= 20000 ~ "$20,000+",
HHINCOME == 9999999 ~ "NA",
is.na(HHINCOME) ~ "Missing",
TRUE ~ NA_character_))
# Weighted proportions
acs_whites_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acs_whites)
income_cat_pct <- svymean(~factor(inc_3cat), acs_whites_svy, na.rm = TRUE)
print(income_cat_pct)
table(acs_whites$HHINCOME)
table(acs_whites$inc_3cat)
# Missing income
missing_inc <- sum(is.na(acs_whites$HHINCOME)) / nrow(acs_whites) * 100
print(paste("Percentage of missing values:", round(missing_percentage, 2), "%"))
missing_inc <- sum(is.na(acs_whites$HHINCOME)) / nrow(acs_whites) * 100
#### 3c. Collapse married ---------------------------
acs_whites <- acs_whites %>%
mutate(
married_dummy = case_when(
MARST %in% c(1, 2) ~ 1,  # Married (spouse present or absent)
MARST %in% c(3, 4, 5, 6) ~ 0,  # Not married (separated, divorced, widowed, never married)
TRUE ~ NA_real_))  # Handle missing values
# Weighted proportions
acs_whites_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acs_whites)
married_pct <- svymean(~factor(married_dummy), acs_whites_svy, na.rm = TRUE)
print(married_pct)
# Or, can calculate weighted percentages this way too
married_pct <- svymean(~married_dummy, acs_whites_svy, na.rm = TRUE) * 100
#### 3d. Visually inspect sample ---------------------------
acs_whites_samp <- acs_whites %>%
select(YEAR, SERIAL, PERNUM, STATEFIP, SEX, AGE, RELATE, MOMLOC, POPLOC, NCHILD,
MARST, married_dummy, RACE, HISPAN, EDUC, hs_binary, HHINCOME, inc_3cat, NUMPREC, FAMSIZE, GQ, PERWT)
#### SAVE
write.csv(acs_whites, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/acs_whites.csv")
write.csv(acs_whites_samp, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/acs_whites_samp.csv")
#=======================================#
#=== ACS TABLE: WHITE ADULT CHILDREN ===#
#=======================================#
#### 4. Set-up ACS sample ---------------------------
## 4a. Get just the adult children (not their parents or other HH members) ---------------------------
# Otherwise the descriptives will reflect pooled data for children + parents (e.g., age will be skewed)
adult_children_white_acs <- acs_whites %>%
filter(AGE >= 18 & (mother_age >= 80 | father_age >= 80)) # Keep only adults who have at least one elderly parent in the household
# Weighted n
adult_children_white_acs_n <- sum(adult_children_white_acs$PERWT) # 851,593
# 851,593/2 = 425,796.5
# Visually inspect sample ---------------------------
samp_white_kids <- adult_children_white_acs %>%
select(YEAR, SERIAL, PERNUM, STATEFIP, RELATE, RELATED, MOMLOC, POPLOC, NCHILD,
SEX, AGE, mother_age, father_age, MARST, married_dummy, RACE, HISPAN, EDUC, hs_binary, HHINCOME, inc_3cat, NUMPREC, FAMSIZE, PERWT)
#### SAVE
write.csv(adult_children_white_acs, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/adult_children_white_acs.csv")
write.csv(samp_white_kids, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/samp_white_kids.csv")
## 4b. Gen ACS desc table ---------------------------
# Set compact theme for gtsummary
theme_gtsummary_compact()
# Table
adult_children_white_acs %>% # ALREADY CO-RESIDENTIAL, SINCE IT'S A HOUSEHOLD-BASED SURVEY
mutate(
SEX = haven::as_factor(SEX),   # convert haven_labelled columns to factors (otherwise get warning)
LANGUAGE = haven::as_factor(LANGUAGE)
) %>%
as_survey_design(weight = PERWT) %>% # weights
select(
AGE, SEX, hs_binary, married_dummy, inc_3cat, # demographics
NUMPREC, # hh size
LANGUAGE # language used during interview
) %>%
mutate(
# Ensure continuous variables are numeric
AGE = as.numeric(AGE),
NUMPREC = as.numeric(NUMPREC)
) %>%
tbl_svysummary(
type = list(
"AGE" ~ "continuous",
"NUMPREC" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE ~ "Age",
SEX ~ "Female",
hs_binary ~ "Education",
married_dummy ~ "Married",
inc_3cat ~ "Household income (annual)",
NUMPREC ~ "Household size",
LANGUAGE ~ "Language"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
modify_caption("**HEPESE vs ACS Caregiver Demographics: White Adult Children (18+) Living with Aging Parents (80+) in AZ, CA, CO, NM, TX (2010â€“2011)**")
adult_children_white_acs <- acs_whites %>%
filter(AGE >= 18 & (mother_age >= 80 | father_age >= 80)) # Keep only adults who have at least one elderly parent in the household
samp_white_kids <- adult_children_white_acs %>%
select(YEAR, SERIAL, PERNUM, STATEFIP, RELATE, RELATED, MOMLOC, POPLOC, NCHILD,
SEX, AGE, mother_age, father_age, MARST, married_dummy, RACE, HISPAN, EDUC, hs_binary, HHINCOME, inc_3cat, NUMPREC, FAMSIZE, PERWT)
# Set compact theme for gtsummary
theme_gtsummary_compact()
# Table
adult_children_white_acs %>% # ALREADY CO-RESIDENTIAL, SINCE IT'S A HOUSEHOLD-BASED SURVEY
mutate(
SEX = haven::as_factor(SEX),   # convert haven_labelled columns to factors (otherwise get warning)
LANGUAGE = haven::as_factor(LANGUAGE)
) %>%
as_survey_design(weight = PERWT) %>% # weights
select(
AGE, SEX, hs_binary, married_dummy, inc_3cat, # demographics
NUMPREC, # hh size
LANGUAGE # language used during interview
) %>%
mutate(
# Ensure continuous variables are numeric
AGE = as.numeric(AGE),
NUMPREC = as.numeric(NUMPREC)
) %>%
tbl_svysummary(
type = list(
"AGE" ~ "continuous",
"NUMPREC" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE ~ "Age",
SEX ~ "Female",
hs_binary ~ "Education",
married_dummy ~ "Married",
inc_3cat ~ "Household income (annual)",
NUMPREC ~ "Household size",
LANGUAGE ~ "Language"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
modify_caption("**HEPESE vs ACS Caregiver Demographics: White Adult Children (18+) Living with Aging Parents (80+) in AZ, CA, CO, NM, TX (2010â€“2011)**")
unique(length(adult_children_white_acs$person_id))
library(readr)
acs_mex <- read_csv("~/Library/CloudStorage/GoogleDrive-bokun001@umn.edu/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/acs_mex.csv",
col_types = cols(...1 = col_skip()))
View(acs_mex)
unique(length(acs_mex$person_id))
adult_children_acs <- acs_mex %>%
filter(AGE >= 18 & (mother_age >= 80 | father_age >= 80)) # Keep only adults who have at least one elderly parent in the household
unique(length(adult_children_acs$person_id)) # n = 8440
## 4b. TABLE (weighted) ---------------------------
adult_children_acs %>%
mutate(
SEX = haven::as_factor(SEX),   # convert haven_labelled columns to factors (otherwise get warning)
LANGUAGE = haven::as_factor(LANGUAGE)
) %>%
as_survey_design(weight = PERWT) %>% # weights
select(
AGE, SEX, hs_binary, married_dummy, inc_3cat, # demographics
NUMPREC, # hh size
LANGUAGE # language used during interview
) %>%
mutate(
# Ensure continuous variables are numeric
AGE = as.numeric(AGE),
NUMPREC = as.numeric(NUMPREC)
) %>%
tbl_svysummary(
type = list(
"AGE" ~ "continuous",
"NUMPREC" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE ~ "Age",
SEX ~ "Female",
hs_binary ~ "Education",
married_dummy ~ "Married",
inc_3cat ~ "Household income (annual)",
NUMPREC ~ "Household size",
LANGUAGE ~ "Language"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
modify_caption("**HEPESE vs ACS Caregiver Demographics: Adult Children (18+) Living with Aging Parents (80+) in AZ, CA, CO, NM, TX (2010â€“2011)**")
View(adult_children_acs)
table(adult_children_acs$LANGUAGE)
2180/2696
mex_hh2 <- acs %>%
filter(ANCESTR1 %in% 210, 211, 213, 218, 219)
mex_hh2 <- acs %>%
filter(ANCESTR1 == 210 | 211 | 213 | 218 | 219)
library(readr)
mex_hh <- read_csv("mex_hh.csv")
View(mex_hh)
unique(length(mex_hh$person_id))
unique(length(mex_hh2$person_id))
mex_hh2 <- acs %>%
filter(HISPAN==1 & RACHSING==5) #mexican and single race identification
unique(length(mex_hh2$person_id)) # n = 1,487,263
mex_hh2 <- acs %>%
filter(HISPAN==1 & RACHSING==5) #mexican and non-multiracial Latino
unique(length(mex_hh2$person_id)) # n = 1,487,263
adult_children_acs$LANGUAGE, adult_children_acs$YRIMMIG)
adult_children_acs$LANGUAGE, adult_children_acs$YRIMMIG)
table(adult_children_acs$LANGUAGE, adult_children_acs$YRIMMIG)
table(adult_children_acs$LANGUAGE, adult_children_acs$BPL)
1006/2696
ggplot(adult_children_acs, aes(x = LANGUAGE, y = Percentage, fill = BPL)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_minimal() +
labs(
title = "Distribution of Birthplaces Among Spanish Speakers",
fill = "Place of Birth"
) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_stack(vjust = 0.5))
ggplot(adult_children_acs, aes(x = LANGUAGE, y = BPL, fill = BPL)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_minimal() +
labs(
title = "Distribution of Birthplaces Among Spanish Speakers",
fill = "Place of Birth"
) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_stack(vjust = 0.5))
ggplot(adult_children_acs, aes(x = LANGUAGE, y = BPL, fill = BPL)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_minimal() +
labs(
title = "Distribution of Birthplaces Among Spanish Speakers",
fill = "Place of Birth"
) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(label = sprintf("%.1f%%", BPL)),
position = position_stack(vjust = 0.5))
# Filter for Spanish speakers (LANGUAGE == 12)
spanish_speakers <- subset(adult_children_acs, LANGUAGE == 12)
# Calculate percentage breakdown by place of birth
bpl_counts <- prop.table(table(spanish_speakers$BPL)) * 100
# Convert to data frame for visualization
bpl_df <- data.frame(BPL = names(bpl_counts), Percentage = as.vector(bpl_counts))
# Load ggplot2 for visualization
library(ggplot2)
# Plot the percentage breakdown
ggplot(bpl_df, aes(x = reorder(BPL, -Percentage), y = Percentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Percentage Breakdown of Spanish Speakers by Place of Birth",
x = "Place of Birth (BPL)",
y = "Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter for Spanish speakers (LANGUAGE == 12)
spanish_speakers <- subset(adult_children_acs, LANGUAGE == 12)
# Recode BPL values
spanish_speakers$BPL <- factor(spanish_speakers$BPL,
levels = c(200, 48, 6, 4, 35, 8),
labels = c("Mexico", "Texas", "California", "Arizona", "New Mexico", "Colorado"))
# Calculate percentage breakdown by place of birth
bpl_counts <- prop.table(table(spanish_speakers$BPL)) * 100
# Convert to data frame for visualization
bpl_df <- data.frame(BPL = names(bpl_counts), Percentage = as.vector(bpl_counts))
# Load ggplot2 for visualization
library(ggplot2)
# Plot the percentage breakdown
ggplot(bpl_df, aes(x = reorder(BPL, -Percentage), y = Percentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Percentage Breakdown of Spanish Speakers by Place of Birth",
x = "Place of Birth (BPL)",
y = "Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter for Spanish speakers (LANGUAGE == 12)
spanish_speakers <- subset(adult_children_acs, LANGUAGE == 12)
# Recode BPL values
spanish_speakers$BPL <- factor(spanish_speakers$BPL,
levels = c(200, 48, 6, 4, 35, 8),
labels = c("Mexico", "Texas", "California", "Arizona", "New Mexico", "Colorado"))
# Calculate percentage breakdown by place of birth
bpl_counts <- prop.table(table(spanish_speakers$BPL)) * 100
# Convert to data frame
bpl_df <- data.frame(Place_of_Birth = names(bpl_counts), Percentage = as.vector(bpl_counts))
# Print table in R console
print(bpl_df)
# Optionally, format as a kable table (if using RMarkdown or Jupyter with R)
library(knitr)
kable(bpl_df, col.names = c("Place of Birth", "Percentage of Spanish Speakers"), digits = 2)
47.05+26.89+20.02+3.41+1.59+1.03
print(bpl_df)
library(knitr)
kable(bpl_df, col.names = c("Place of Birth", "Percentage of Spanish Speakers"), digits = 2)
write.csv(spanish_speakers, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/Temp/spanish_speakers.csv")
## 4b. TABLE (weighted) ---------------------------
adult_children_acs %>%
mutate(
SEX = haven::as_factor(SEX),   # convert haven_labelled columns to factors (otherwise get warning)
LANGUAGE = haven::as_factor(LANGUAGE)
) %>%
as_survey_design(weight = PERWT) %>% # weights (N will be weighted, but ignore - we only want weighted prop/means, not sample sizes)
select(
AGE, SEX, hs_binary, married_dummy, inc_3cat, # demographics
NUMPREC, # hh size
LANGUAGE # language used during interview
) %>%
mutate(
# Ensure continuous variables are numeric
AGE = as.numeric(AGE),
NUMPREC = as.numeric(NUMPREC)
) %>%
tbl_svysummary(
type = list(
"AGE" ~ "continuous",
"NUMPREC" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE ~ "Age",
SEX ~ "Female",
hs_binary ~ "Education",
married_dummy ~ "Married",
inc_3cat ~ "Household income (annual)",
NUMPREC ~ "Household size",
LANGUAGE ~ "Language"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
modify_caption("**HEPESE vs ACS Caregiver Demographics: Adult Children (18+) Living with Aging Parents (80+) in AZ, CA, CO, NM, TX (2010â€“2011)**")
adult_children_acs_mex <- adult_children_acs
## 4b. TABLE (weighted) ---------------------------
adult_children_acs_mex %>%
mutate(
SEX = haven::as_factor(SEX),   # convert haven_labelled columns to factors (otherwise get warning)
LANGUAGE = haven::as_factor(LANGUAGE)
) %>%
as_survey_design(weight = PERWT) %>% # weights (N will be weighted, but ignore - we only want weighted prop/means, not sample sizes)
select(
AGE, SEX, hs_binary, married_dummy, inc_3cat, # demographics
NUMPREC, # hh size
LANGUAGE # language used during interview
) %>%
mutate(
# Ensure continuous variables are numeric
AGE = as.numeric(AGE),
NUMPREC = as.numeric(NUMPREC)
) %>%
tbl_svysummary(
type = list(
"AGE" ~ "continuous",
"NUMPREC" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE ~ "Age",
SEX ~ "Female",
hs_binary ~ "Education",
married_dummy ~ "Married",
inc_3cat ~ "Household income (annual)",
NUMPREC ~ "Household size",
LANGUAGE ~ "Language"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
modify_caption("**HEPESE vs ACS Caregiver Demographics: Adult Children (18+) Living with Aging Parents (80+) in AZ, CA, CO, NM, TX (2010â€“2011)**")
write.csv(adult_children_acs_mex, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/Data/adult_children_acs_mex.csv")
