parents_acs$DIFFREM == 2)
acc_acs <- acs %>%
filter(AGE %in% 18:70, # to match w7 --> https://www.icpsr.umich.edu/web/NACDA/studies/36537/datasets/0002/variables/AGE7I?archive=nacda
HISPAN == 1, # Mexican
CLASSWKRD == 29, # CLASSWKRD==29: Unpaid family worker
GQ %in% 1:2, # exclude institutionalized (to match HEPESE community-dwelling sample). 1= Households under 1970 definition | 2 = Additional households under 1990 definition
parents_cps$DIFFMOB == 2, # functional difficulties of parents
parents_acs$DIFFPHYS == 2, # I filter by functional status of parents, but they are not individually linked/matched to the ACCs, since you link via HH relationships, but that would exclude all non-residential ACCs
parents_acs$DIFFCARE == 2,
parents_acs$DIFFREM == 2)
acc_acs <- acs %>%
filter(AGE %in% 18:70, # to match w7 --> https://www.icpsr.umich.edu/web/NACDA/studies/36537/datasets/0002/variables/AGE7I?archive=nacda
HISPAN == 1, # Mexican
CLASSWKRD == 29, # CLASSWKRD==29: Unpaid family worker
GQ %in% 1:2, # exclude institutionalized (to match HEPESE community-dwelling sample). 1= Households under 1970 definition | 2 = Additional households under 1990 definition
parents_acs$DIFFMOB == 2, # functional difficulties of parents
parents_acs$DIFFPHYS == 2, # I filter by functional status of parents, but they are not individually linked/matched to the ACCs, since you link via HH relationships, but that would exclude all non-residential ACCs
parents_acs$DIFFCARE == 2,
parents_acs$DIFFREM == 2)
acc_acs <- acs %>%
filter(AGE %in% 18:70, # to match w7 --> https://www.icpsr.umich.edu/web/NACDA/studies/36537/datasets/0002/variables/AGE7I?archive=nacda
HISPAN == 1, # Mexican
CLASSWKRD == 29, # CLASSWKRD==29: Unpaid family worker (proxy for caregiving, as unpaid family workers are often informal caregivers)
GQ %in% 1:2) # exclude institutionalized (to match HEPESE community-dwelling sample). 1= Households under 1970 definition | 2 = Additional households under 1990 definition
View(acc_acs)
table(acs$CLASSWKRD)
# First create survey design object
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Age (mean)
acc_age_mean <- svymean(~AGE, acc_acs_svy)
weighted_age <- svymean(~AGE, acc_acs_svy)
print(weighted_age)
weighted_n <- sum(acc_acs$PERWT)
# Or if using survey package:
weighted_n <- sum(weights(acs_svy))
weighted_n <- sum(weights(acc_acs_svy))
# Total weighted n
weighted_n <- sum(acc_acs$PERWT)
# Or if using survey package:
weighted_nz <- sum(weights(acc_acs_svy))
acc_n <- sum(acc_acs$PERWT)
weighted_nz <- sum(weights(acc_acs_svy))
acc_n <- sum(weights(acc_acs_svy))
parents_n <- sum(parents_acs$PERWT)
parents_n <- sum(weights(acc_acs_svy))
parents_n <- sum(parents_acs$PERWT)
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
age_mean <- svymean(~AGE, acs_svy)
age_mean <- svymean(~AGE, acc_acs_svy)
acc_female_pct <- svymean(~I(SEX == 2), acc_acs_svy) * 100
weighted_female <- svymean(~I(SEX == 2), acc_acs_svy)
print(weighted_female)
table(acc_acs$CLASSWKRD, acc_acs$HISPAN)
table(acs$CLASSWKRD, acs$HISPAN)
acc_acs <- acc_acs %>%
mutate(
educ_cat = case_when(
EDUC %in% 0:5 ~ "Less than High School",
EDUC == 6 ~ "High School Graduate",
EDUC %in% 7:9 ~ "Some College",
EDUC %in% 10:11 ~ "College Graduate or Higher",
TRUE ~ NA_character_ # Handle missing values
)
)
# Weighted proportions for education levels
educ_dist <- svymean(~factor(educ_cat), acc_acs_svy, na.rm = TRUE)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for education levels
educ_dist <- svymean(~factor(educ_cat), acc_acs_svy, na.rm = TRUE)
# Print results
print(educ_dist)
# Recode EDUC into HS/No HS categories
acc_acs <- acc_acs %>%
mutate(
hs_binary = case_when(
EDUC %in% 0:5 ~ "Less than High School",
EDUC %in% 6:11 ~ "High School or More",
TRUE ~ NA_character_ # Handle missing values
)
)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
hs_distribution <- svymean(~factor(hs_binary), acc_acs_svy, na.rm = TRUE)
# Print results
print(hs_distribution)
# Create binary education variable: HS/No HS
ACC$cg_educ_binary <- cut(ACC$CEDUC7I_1,
breaks = c(-Inf, 11, 12, Inf),  # Modify breaks for binary categorization
labels = c("Less than HS",
"HS or More"),  # Two categories: Less than HS, HS or More
right = TRUE)
# Create binary education variable
ACC$cg_educ_binary <- cut(ACC$CEDUC7I_1,
breaks = c(-Inf, 11, Inf), # Just one break at 11 years
labels = c("Less than HS", "HS or more"),
right = TRUE)
table(ACC$cg_educ_binary) # Should show Less than HS: 230, HS or more: 417 (183+129+105)
# Print results
print(hs_distribution)
#### Load packages
library(tidyverse)
library(gtsummary)
library(flextable)
library(smd)
# Set compact theme for gtsummary
theme_gtsummary_compact()
table1_acc <- ACC %>%
select(cg_finc_strain, AGE7I, SEX7I, cg_educ_binary, cg_married, cg_inc_cat, # demographics
cg_coreside, cg_HOH, NHOUSE7I, # living arrangements
cg_health, cg_chronic_any, cg_arth, cg_heart_probs, cg_diab, cg_cancer, # physical health
cg_sad, cg_health_util, # mental health + util
cg_hours_adl, cg_hours_iadl, cg_yrs_care, cr_dementia) %>% # caregiving intensity
mutate(
# Ensure continuous variables are numeric
AGE7I = as.numeric(AGE7I),
NHOUSE7I = as.numeric(NHOUSE7I),
cg_hours_adl = as.numeric(cg_hours_adl),
cg_hours_iadl = as.numeric(cg_hours_iadl),
# Create factor with specific level order for financial strain
cg_finc_strain = factor(cg_finc_strain,
levels = c(1, 0),
labels = c("Financial strain", "No financial strain"))
) %>%
tbl_summary(
by = cg_finc_strain,
type = list(
"AGE7I" ~ "continuous",
"NHOUSE7I" ~ "continuous",
"cg_hours_adl" ~ "continuous",
"cg_hours_iadl" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE7I ~ "Age",
SEX7I ~ "Female",
cg_educ_binary ~ "Education",
cg_married ~ "Married",
cg_inc_cat ~ "Household income (annual)",
cg_coreside ~ "Co-reside with parent",
cg_HOH ~ "Caregiver - head of household",
NHOUSE7I ~ "Household size",
cg_health ~ "Self-rated health",
cg_chronic_any ~ "Any chronic condition",
cg_arth ~ "Arthritis",
cg_heart_probs ~ "Cardiovascular disease",
cg_diab ~ "Diabetes",
cg_cancer ~ "Cancer",
cg_sad ~ "Felt sad",
cg_health_util ~ "Healthcare utilization",
cg_hours_adl ~ "ADL hours/day",
cg_hours_iadl ~ "IADL hours/day",
cg_yrs_care ~ "Years caregiving",
cr_dementia ~ "Care recipient has dementia"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
add_overall(col_label = "**Total Sample**, N = 659") %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
add_p(
test = list(
all_continuous() ~ "aov",     # ANOVA for continuous variables
all_categorical() ~ "chisq.test"  # Chi-square for categorical variables
),
pvalue_fun = ~ style_pvalue(.x, digits = 3)
) %>%
modify_caption("**Table 1. Adult Children Caregivers: Demographic, Health, and Caregiving Characteristics**") %>%
as_flex_table() %>%
save_as_docx(path = "table1_acc.docx")
ACC %>%
select(cg_finc_strain, AGE7I, SEX7I, cg_educ_binary, cg_married, cg_inc_cat, # demographics
cg_coreside, cg_HOH, NHOUSE7I, # living arrangements
cg_health, cg_chronic_any, cg_arth, cg_heart_probs, cg_diab, cg_cancer, # physical health
cg_sad, cg_health_util, # mental health + util
cg_hours_adl, cg_hours_iadl, cg_yrs_care, cr_dementia) %>% # caregiving intensity
mutate(
# Ensure continuous variables are numeric
AGE7I = as.numeric(AGE7I),
NHOUSE7I = as.numeric(NHOUSE7I),
cg_hours_adl = as.numeric(cg_hours_adl),
cg_hours_iadl = as.numeric(cg_hours_iadl),
# Create factor with specific level order for financial strain
cg_finc_strain = factor(cg_finc_strain,
levels = c(1, 0),
labels = c("Financial strain", "No financial strain"))
) %>%
tbl_summary(
by = cg_finc_strain,
type = list(
"AGE7I" ~ "continuous",
"NHOUSE7I" ~ "continuous",
"cg_hours_adl" ~ "continuous",
"cg_hours_iadl" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE7I ~ "Age",
SEX7I ~ "Female",
cg_educ_binary ~ "Education",
cg_married ~ "Married",
cg_inc_cat ~ "Household income (annual)",
cg_coreside ~ "Co-reside with parent",
cg_HOH ~ "Caregiver - head of household",
NHOUSE7I ~ "Household size",
cg_health ~ "Self-rated health",
cg_chronic_any ~ "Any chronic condition",
cg_arth ~ "Arthritis",
cg_heart_probs ~ "Cardiovascular disease",
cg_diab ~ "Diabetes",
cg_cancer ~ "Cancer",
cg_sad ~ "Felt sad",
cg_health_util ~ "Healthcare utilization",
cg_hours_adl ~ "ADL hours/day",
cg_hours_iadl ~ "IADL hours/day",
cg_yrs_care ~ "Years caregiving",
cr_dementia ~ "Care recipient has dementia"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
add_overall(col_label = "**Total Sample**, N = 659") %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
add_p(
test = list(
all_continuous() ~ "aov",     # ANOVA for continuous variables
all_categorical() ~ "chisq.test"  # Chi-square for categorical variables
),
pvalue_fun = ~ style_pvalue(.x, digits = 3)
) %>%
modify_caption("**Table 1. Adult Children Caregivers: Demographic, Health, and Caregiving Characteristics**")
## $20k binary
ACC <- ACC %>%
mutate(
cg_inc_3cat = case_when(
LL3A7I %in% c(1,2,3,4) ~ "< $20,000",
LL3A7I %in% c(5,6,7,8) ~ "$20,000+",
is.na(LL3A7I) | LL3A7I == 9 ~ "Missing", # Assuming 9 is missing code
TRUE ~ NA_character_
)
)
# Verify the categories
table(ACC$cg_inc_3cat, useNA = "always")
ACC <- ACC %>%
mutate(
cg_inc_3cat = case_when(
LL3A7I %in% c(1, 2, 3, 4) ~ "< $20,000",   # Combine <$10k and $10k-$19,999
LL3A7I %in% c(5, 6, 7, 8) ~ ">= $20,000", # Combine $20k-$29,999, $30k-$49,999, $50k+
is.na(LL3A7I) ~ "Missing Income",         # Explicitly handle missing values
TRUE ~ NA_character_                      # Catch-all for unexpected values
)
)
# Check distribution of the new variable
table(ACC$cg_inc_3cat)
## $20k binary
ACC <- ACC %>%
mutate(
cg_inc_3cat = case_when(
LL3A7I %in% c(1,2,3,4) ~ "< $20,000",
LL3A7I %in% c(5,6,7,8) ~ "$20,000+",
is.na(LL3A7I) | LL3A7I == 9 ~ "Missing", # Assuming 9 is missing code
TRUE ~ NA_character_
)
)
# Verify the categories
table(ACC$cg_inc_3cat, useNA = "always")
ACC %>%
select(cg_finc_strain, AGE7I, SEX7I, cg_educ_binary, cg_married, cg_inc_3cat, # demographics
cg_coreside, cg_HOH, NHOUSE7I, # living arrangements
cg_health, cg_chronic_any, cg_arth, cg_heart_probs, cg_diab, cg_cancer, # physical health
cg_sad, cg_health_util, # mental health + util
cg_hours_adl, cg_hours_iadl, cg_yrs_care, cr_dementia) %>% # caregiving intensity
mutate(
# Ensure continuous variables are numeric
AGE7I = as.numeric(AGE7I),
NHOUSE7I = as.numeric(NHOUSE7I),
cg_hours_adl = as.numeric(cg_hours_adl),
cg_hours_iadl = as.numeric(cg_hours_iadl),
# Create factor with specific level order for financial strain
cg_finc_strain = factor(cg_finc_strain,
levels = c(1, 0),
labels = c("Financial strain", "No financial strain"))
) %>%
tbl_summary(
by = cg_finc_strain,
type = list(
"AGE7I" ~ "continuous",
"NHOUSE7I" ~ "continuous",
"cg_hours_adl" ~ "continuous",
"cg_hours_iadl" ~ "continuous"
),
statistic = list(
all_continuous() ~ "{mean}",
all_categorical() ~ "{n} ({p}%)"
),
label = list(
AGE7I ~ "Age",
SEX7I ~ "Female",
cg_educ_binary ~ "Education",
cg_married ~ "Married",
cg_inc_3cat ~ "Household income (annual)",
cg_coreside ~ "Co-reside with parent",
cg_HOH ~ "Caregiver - head of household",
NHOUSE7I ~ "Household size",
cg_health ~ "Self-rated health",
cg_chronic_any ~ "Any chronic condition",
cg_arth ~ "Arthritis",
cg_heart_probs ~ "Cardiovascular disease",
cg_diab ~ "Diabetes",
cg_cancer ~ "Cancer",
cg_sad ~ "Felt sad",
cg_health_util ~ "Healthcare utilization",
cg_hours_adl ~ "ADL hours/day",
cg_hours_iadl ~ "IADL hours/day",
cg_yrs_care ~ "Years caregiving",
cr_dementia ~ "Care recipient has dementia"
),
missing = "always",  # Changed to show missing
missing_text = "Missing",  # Text to display for missing values
digits = list(
all_categorical() ~ c(0, 1),
all_continuous() ~ 2
)
) %>%
modify_header(
label = "**Characteristic**"
) %>%
add_overall(col_label = "**Total Sample**, N = 659") %>%
modify_table_styling(
columns = starts_with("stat_")
) %>%
add_p(
test = list(
all_continuous() ~ "aov",     # ANOVA for continuous variables
all_categorical() ~ "chisq.test"  # Chi-square for categorical variables
),
pvalue_fun = ~ style_pvalue(.x, digits = 3)
) %>%
modify_caption("**Table 1. Adult Children Caregivers: Demographic, Health, and Caregiving Characteristics**")
table(acc_acs$hhincome)
table(acc_acs$HHINCOME)
sum(acc_acs$HHINCOME)
summary(acc_acs$HHINCOME)
# Create 3-category income variable
acc_acs <- acc_acs %>%
mutate(
inc_3cat = case_when(
HHINCOME < 20000 ~ "< $20,000",
HHINCOME >= 20000 ~ "$20,000+",
is.na(HHINCOME) ~ "Missing",
TRUE ~ NA_character_
)
)
# Calculate weighted percentages using survey design
income_cat_pct <- svymean(~inc_3cat, acc_acs_svy)
# Create 3-category income variable
acc_acs <- acc_acs %>%
mutate(
inc_3cat = case_when(
HHINCOME < 20000 ~ "< $20,000",
HHINCOME >= 20000 ~ "$20,000+",
is.na(HHINCOME) ~ "Missing",
TRUE ~ NA_character_
)
)
income_cat_pct <- svymean(~inc_3cat, acc_acs_svy)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
income_cat_pct <- svymean(~factor(inc_3cat), acc_acs_svy, na.rm = TRUE)
# Print results
print(income_cat_pct)
68/659
acc_acs <- acc_acs %>%
mutate(
married = case_when(
MARST == 1 ~ 1,        # Married, spouse present
MARST >= 2 ~ 0,        # All other categories (married spouse absent, separated, divorced, widowed, never married)
TRUE ~ NA_real_        # Missing
)
)
# Calculate weighted percentage married using survey design
married_pct <- svymean(~married, acs_svy) * 100
#### 7.) Married %
acc_acs <- acc_acs %>%
mutate(
married = case_when(
MARST == 1 ~ 1,        # Married, spouse present
MARST >= 2 ~ 0,        # All other categories (married spouse absent, separated, divorced, widowed, never married)
TRUE ~ NA_real_        # Missing
)
)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
married_pct <- svymean(~factor(married), acc_acs_svy, na.rm = TRUE)
# Print results
print(married_pct)
acc_acs <- acc_acs %>%
mutate(
married_dummy = case_when(
MARST %in% c(1, 2) ~ 1,  # Married (spouse present or absent)
MARST %in% c(3, 4, 5, 6) ~ 0,  # Not married (separated, divorced, widowed, never married)
TRUE ~ NA_real_  # Handle missing values
)
)
# Check distribution of the dummy variable
table(acc_acs$married_dummy, useNA = "ifany")
234/659
acc_acs <- acc_acs %>%
mutate(
married_dummy = case_when(
MARST %in% c(1, 2) ~ 1,  # Married (spouse present or absent)
MARST %in% c(3, 4, 5, 6) ~ 0,  # Not married (separated, divorced, widowed, never married)
TRUE ~ NA_real_  # Handle missing values
)
)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
married_pct <- svymean(~factor(married_dummy), acc_acs_svy, na.rm = TRUE)
# Print results
print(married_pct)
# Create married dummy
acc_acs <- acc_acs %>%
mutate(
married = case_when(
MARST == 1 ~ 1,        # Married, spouse present
MARST %in% 2:6 ~ 0,    # All other marital statuses
MARST == 9 ~ NA_real_, # Missing
is.na(MARST) ~ NA_real_,
TRUE ~ NA_real_
)
)
# Calculate weighted percentage married using survey design
married_pct <- svymean(~married, acc_acs_svy, na.rm = TRUE) * 100
acc_acs <- acc_acs %>%
mutate(
married_dummy = case_when(
MARST %in% c(1, 2) ~ 1,  # Married (spouse present or absent)
MARST %in% c(3, 4, 5, 6) ~ 0,  # Not married (separated, divorced, widowed, never married)
TRUE ~ NA_real_  # Handle missing values
)
)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
married_pct <- svymean(~factor(married_dummy), acc_acs_svy, na.rm = TRUE)
# Print results
print(married_pct)
acc_acs <- acc_acs %>%
mutate(
married = case_when(
MARST == 1 ~ 1,        # Married, spouse present
MARST >= 2 ~ 0,        # All other categories (married spouse absent, separated, divorced, widowed, never married)
TRUE ~ NA_real_        # Missing
)
)
# Create survey design
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
# Weighted proportions for HS/No HS
married_pct <- svymean(~factor(married), acc_acs_svy, na.rm = TRUE)
# Print results
print(married_pct)
# Create married dummy
acc_acs <- acc_acs %>%
mutate(
married = case_when(
MARST == 1 ~ 1,        # Married, spouse present
MARST %in% 2:6 ~ 0,    # All other marital statuses
MARST == 9 ~ NA_real_, # Missing
is.na(MARST) ~ NA_real_,
TRUE ~ NA_real_
)
)
# Calculate weighted percentage married using survey design
married_pct <- svymean(~married, acc_acs_svy, na.rm = TRUE) * 100
married_pct <- svymean(~married_dummy, acc_acs_svy, na.rm = TRUE) * 100
print(married_pct)
# First create survey design object
acc_acs_svy <- svydesign(ids = ~1, weights = ~PERWT, data = acc_acs)
acc_age_mean <- svymean(~AGE, acc_acs_svy) # 37.5
mean(acc_acs$AGE)
write.csv(acs, "/Users/annabokun/Google Drive/My Drive/Dissertation/Chapter 3/Replication Files/Data/Temp/acs.csv")
write.csv(acs, "/Users/annabokun/Google Drive/My Drive/UT-Austin Postdoc/Projects/Caregivers - Housing Health Paradox/Replication Files/acs.csv")
